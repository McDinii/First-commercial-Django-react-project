[{"D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\index.js":"1","D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\store.js":"2","D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\App.js":"3","D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\reportWebVitals.js":"4","D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\reducers\\productReducers.js":"5","D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\components\\Header.js":"6","D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\reducers\\orderReducers.js":"7","D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\reducers\\cartReducers.js":"8","D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\reducers\\userReducers.js":"9","D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\screens\\PaymentScreen.js":"10","D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\screens\\ProductScreen.js":"11","D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\screens\\HomeScreen.js":"12","D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\screens\\OrderScreen.js":"13","D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\screens\\CartScreen.js":"14","D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\screens\\ProfileScreen.js":"15","D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\screens\\ShippingScreen.js":"16","D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\screens\\LoginScreen.js":"17","D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\components\\Footer.js":"18","D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\screens\\PlaceOrderScreen.js":"19","D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\screens\\UserEditScreen.js":"20","D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\screens\\RegisterScreen.js":"21","D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\screens\\ProductEditScreen.js":"22","D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\screens\\OrderListScreen.js":"23","D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\screens\\UserListScreen.js":"24","D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\screens\\ProductListScreen.js":"25","D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\components\\SearchBox.js":"26","D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\components\\CheckoutSteps.js":"27","D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\components\\FormContainer.js":"28","D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\components\\Message.js":"29","D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\components\\Rating.js":"30","D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\components\\Product.js":"31","D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\components\\Paginate.js":"32","D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\components\\Loader.js":"33","D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\components\\ProductCarousel.js":"34","D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\constants\\orderConstants.js":"35","D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\actions\\userActions.js":"36","D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\constants\\productConstants.js":"37","D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\constants\\cartConstants.js":"38","D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\actions\\cartActions.js":"39","D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\constants\\userConstants.js":"40","D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\actions\\productActions.js":"41","D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\actions\\orderActions.js":"42","D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\index.js":"43","D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\store.js":"44","D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\App.js":"45","D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\reportWebVitals.js":"46","D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\reducers\\userReducers.js":"47","D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\reducers\\cartReducers.js":"48","D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\reducers\\productReducers.js":"49","D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\reducers\\orderReducers.js":"50","D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\components\\Header.js":"51","D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\screens\\ProductScreen.js":"52","D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\screens\\HomeScreen.js":"53","D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\components\\Footer.js":"54","D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\screens\\CartScreen.js":"55","D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\screens\\ShippingScreen.js":"56","D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\screens\\LoginScreen.js":"57","D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\screens\\RegisterScreen.js":"58","D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\screens\\ProfileScreen.js":"59","D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\screens\\UserListScreen.js":"60","D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\screens\\ProductListScreen.js":"61","D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\screens\\PaymentScreen.js":"62","D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\screens\\PlaceOrderScreen.js":"63","D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\screens\\OrderListScreen.js":"64","D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\screens\\OrderScreen.js":"65","D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\screens\\ProductEditScreen.js":"66","D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\screens\\UserEditScreen.js":"67","D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\constants\\orderConstants.js":"68","D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\constants\\cartConstants.js":"69","D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\constants\\productConstants.js":"70","D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\constants\\userConstants.js":"71","D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\components\\Message.js":"72","D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\components\\Product.js":"73","D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\components\\Loader.js":"74","D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\components\\SearchBox.js":"75","D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\components\\Paginate.js":"76","D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\components\\ProductCarousel.js":"77","D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\components\\CheckoutSteps.js":"78","D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\components\\FormContainer.js":"79","D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\components\\Rating.js":"80","D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\actions\\cartActions.js":"81","D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\actions\\orderActions.js":"82","D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\actions\\productActions.js":"83","D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\actions\\userActions.js":"84"},{"size":689,"mtime":1652749729284,"results":"85","hashOfConfig":"86"},{"size":2417,"mtime":1616789579000,"results":"87","hashOfConfig":"86"},{"size":2194,"mtime":1652750480869,"results":"88","hashOfConfig":"86"},{"size":362,"mtime":1616789579000,"results":"89","hashOfConfig":"86"},{"size":4080,"mtime":1616789579000,"results":"90","hashOfConfig":"86"},{"size":3022,"mtime":1652743178981,"results":"91","hashOfConfig":"86"},{"size":4079,"mtime":1616789579000,"results":"92","hashOfConfig":"86"},{"size":1486,"mtime":1616789579000,"results":"93","hashOfConfig":"86"},{"size":3926,"mtime":1616789579000,"results":"94","hashOfConfig":"86"},{"size":1770,"mtime":1652739530352,"results":"95","hashOfConfig":"86"},{"size":11767,"mtime":1652782023713,"results":"96","hashOfConfig":"86"},{"size":1510,"mtime":1652750303475,"results":"97","hashOfConfig":"86"},{"size":10099,"mtime":1652739159041,"results":"98","hashOfConfig":"86"},{"size":4767,"mtime":1652738840476,"results":"99","hashOfConfig":"86"},{"size":6901,"mtime":1650107046560,"results":"100","hashOfConfig":"86"},{"size":3296,"mtime":1652739385621,"results":"101","hashOfConfig":"86"},{"size":2632,"mtime":1652738630710,"results":"102","hashOfConfig":"86"},{"size":3066,"mtime":1652750916784,"results":"103","hashOfConfig":"86"},{"size":6645,"mtime":1652741002565,"results":"104","hashOfConfig":"86"},{"size":3993,"mtime":1652751066795,"results":"105","hashOfConfig":"86"},{"size":4081,"mtime":1652752561345,"results":"106","hashOfConfig":"86"},{"size":8175,"mtime":1652750732293,"results":"107","hashOfConfig":"86"},{"size":3603,"mtime":1652738454077,"results":"108","hashOfConfig":"86"},{"size":3542,"mtime":1652743148665,"results":"109","hashOfConfig":"86"},{"size":5080,"mtime":1652741225862,"results":"110","hashOfConfig":"86"},{"size":988,"mtime":1652737912330,"results":"111","hashOfConfig":"86"},{"size":1634,"mtime":1652739780646,"results":"112","hashOfConfig":"86"},{"size":378,"mtime":1616789579000,"results":"113","hashOfConfig":"86"},{"size":228,"mtime":1616789579000,"results":"114","hashOfConfig":"86"},{"size":1886,"mtime":1616789579000,"results":"115","hashOfConfig":"86"},{"size":1025,"mtime":1652782135851,"results":"116","hashOfConfig":"86"},{"size":859,"mtime":1616789579000,"results":"117","hashOfConfig":"86"},{"size":467,"mtime":1652742318917,"results":"118","hashOfConfig":"86"},{"size":1419,"mtime":1616789579000,"results":"119","hashOfConfig":"86"},{"size":1240,"mtime":1616789579000,"results":"120","hashOfConfig":"86"},{"size":7370,"mtime":1616789579000,"results":"121","hashOfConfig":"86"},{"size":1502,"mtime":1616789579000,"results":"122","hashOfConfig":"86"},{"size":287,"mtime":1616789579000,"results":"123","hashOfConfig":"86"},{"size":1310,"mtime":1616789579000,"results":"124","hashOfConfig":"86"},{"size":1479,"mtime":1616789579000,"results":"125","hashOfConfig":"86"},{"size":5931,"mtime":1616789579000,"results":"126","hashOfConfig":"86"},{"size":6009,"mtime":1616789579000,"results":"127","hashOfConfig":"86"},{"size":689,"mtime":1652749729284,"results":"128","hashOfConfig":"129"},{"size":2417,"mtime":1616789579000,"results":"130","hashOfConfig":"129"},{"size":2194,"mtime":1652750480869,"results":"131","hashOfConfig":"129"},{"size":362,"mtime":1616789579000,"results":"132","hashOfConfig":"129"},{"size":3926,"mtime":1616789579000,"results":"133","hashOfConfig":"129"},{"size":1486,"mtime":1616789579000,"results":"134","hashOfConfig":"129"},{"size":4080,"mtime":1616789579000,"results":"135","hashOfConfig":"129"},{"size":4079,"mtime":1616789579000,"results":"136","hashOfConfig":"129"},{"size":3022,"mtime":1652743178981,"results":"137","hashOfConfig":"129"},{"size":11767,"mtime":1652782023713,"results":"138","hashOfConfig":"129"},{"size":1510,"mtime":1652793157568,"results":"139","hashOfConfig":"129"},{"size":3116,"mtime":1652798707325,"results":"140","hashOfConfig":"129"},{"size":4767,"mtime":1652738840476,"results":"141","hashOfConfig":"129"},{"size":3296,"mtime":1652739385621,"results":"142","hashOfConfig":"129"},{"size":2632,"mtime":1652738630710,"results":"143","hashOfConfig":"129"},{"size":4081,"mtime":1652752561345,"results":"144","hashOfConfig":"129"},{"size":6901,"mtime":1650107046560,"results":"145","hashOfConfig":"129"},{"size":3542,"mtime":1652743148665,"results":"146","hashOfConfig":"129"},{"size":5080,"mtime":1652741225862,"results":"147","hashOfConfig":"129"},{"size":1770,"mtime":1652739530352,"results":"148","hashOfConfig":"129"},{"size":6645,"mtime":1652741002565,"results":"149","hashOfConfig":"129"},{"size":3603,"mtime":1652738454077,"results":"150","hashOfConfig":"129"},{"size":10099,"mtime":1652739159041,"results":"151","hashOfConfig":"129"},{"size":8175,"mtime":1652750732293,"results":"152","hashOfConfig":"129"},{"size":3993,"mtime":1652751066795,"results":"153","hashOfConfig":"129"},{"size":1240,"mtime":1616789579000,"results":"154","hashOfConfig":"129"},{"size":287,"mtime":1616789579000,"results":"155","hashOfConfig":"129"},{"size":1502,"mtime":1616789579000,"results":"156","hashOfConfig":"129"},{"size":1479,"mtime":1616789579000,"results":"157","hashOfConfig":"129"},{"size":228,"mtime":1616789579000,"results":"158","hashOfConfig":"129"},{"size":1024,"mtime":1652786547046,"results":"159","hashOfConfig":"129"},{"size":467,"mtime":1652742318917,"results":"160","hashOfConfig":"129"},{"size":988,"mtime":1652737912330,"results":"161","hashOfConfig":"129"},{"size":859,"mtime":1616789579000,"results":"162","hashOfConfig":"129"},{"size":1419,"mtime":1616789579000,"results":"163","hashOfConfig":"129"},{"size":1634,"mtime":1652739780646,"results":"164","hashOfConfig":"129"},{"size":378,"mtime":1616789579000,"results":"165","hashOfConfig":"129"},{"size":1886,"mtime":1616789579000,"results":"166","hashOfConfig":"129"},{"size":1310,"mtime":1616789579000,"results":"167","hashOfConfig":"129"},{"size":6009,"mtime":1616789579000,"results":"168","hashOfConfig":"129"},{"size":5931,"mtime":1616789579000,"results":"169","hashOfConfig":"129"},{"size":7370,"mtime":1616789579000,"results":"170","hashOfConfig":"129"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},"4tljf9",{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"173"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"173"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"173"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"173"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"173"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"173"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"173"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"173"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"173"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"173"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"173"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"173"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"173"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"173"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"173"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"173"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},"v9orts",{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"274"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"274"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"274"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"274"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"274"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"274"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"274"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"274"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"274"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"274"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"274"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"274"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"274"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"353"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"274"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"274"},"D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\index.js",[],["358","359"],"D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\store.js",[],"D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\App.js",[],"D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\reportWebVitals.js",[],"D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\reducers\\productReducers.js",[],"D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\components\\Header.js",["360"],"import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Navbar, Nav, Container, Row, NavDropdown } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport SearchBox from './SearchBox'\nimport { logout } from '../actions/userActions'\n\nfunction Header() {\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const dispatch = useDispatch()\n\n    const logoutHandler = () => {\n        dispatch(logout())\n    }\n\n    return (\n        <header>\n            <Navbar bg=\"md\" variant=\"md\" expand=\"md\" collapseOnSelect>\n                <Container>\n                    <LinkContainer to='/' >\n                        <Navbar.Brand >LIGNEA</Navbar.Brand>\n                    </LinkContainer>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <SearchBox />\n                        <Nav className=\"ml-auto\">\n\n                            <LinkContainer to='/cart'>\n                                <Nav.Link >Корзина</Nav.Link>\n                            </LinkContainer>\n\n                            {userInfo ? (\n                                <NavDropdown title={userInfo.name} id='username'>\n                                    <LinkContainer to='/profile'>\n                                        <NavDropdown.Item>Профиль</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <NavDropdown.Item onClick={logoutHandler}>Выйти</NavDropdown.Item>\n\n                                </NavDropdown>\n                            ) : (\n                                    <LinkContainer to='/login'>\n                                        <Nav.Link><i className=\"fas fa-user\"></i>Войти</Nav.Link>\n                                    </LinkContainer>\n                                )}\n\n\n                            {userInfo && userInfo.isAdmin && (\n                                <NavDropdown title='Админ' id='adminmenue'>\n                                    <LinkContainer to='/admin/userlist'>\n                                        <NavDropdown.Item>Пользователи</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <LinkContainer to='/admin/productlist'>\n                                        <NavDropdown.Item>Товары</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <LinkContainer to='/admin/orderlist'>\n                                        <NavDropdown.Item>Заказы</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                </NavDropdown>\n                            )}\n\n\n                        </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n        </header>\n    )\n}\n\nexport default Header\n","D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\reducers\\orderReducers.js",[],"D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\reducers\\cartReducers.js",[],"D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\reducers\\userReducers.js",[],"D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\screens\\PaymentScreen.js",["361"],"import React, { useState, useEffect } from 'react'\nimport { Form, Button, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { savePaymentMethod } from '../actions/cartActions'\n\nfunction PaymentScreen({ history }) {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\n\n    if (!shippingAddress.address) {\n        history.push('/shipping')\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(savePaymentMethod(paymentMethod))\n        history.push('/placeorder')\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 step3 />\n\n            <Form onSubmit={submitHandler}>\n                <Form.Group>\n                    <Form.Label as='legend'>Выберите способ оплаты</Form.Label>\n                    <Col>\n                        <Form.Check\n                            type='radio'\n                            label='PayPal или Платежной картой'\n                            id='paypal'\n                            name='paymentMethod'\n                            checked\n                            onChange={(e) => setPaymentMethod(e.target.value)}\n                        >\n\n                        </Form.Check>\n                    </Col>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Продолжить\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default PaymentScreen\n","D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\screens\\ProductScreen.js",["362"],"import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\nimport Rating from '../components/Rating'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listProductDetails, createProductReview } from '../actions/productActions'\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\n\nfunction ProductScreen({ match, history }) {\n    const [qty, setQty] = useState(1)\n    const [rating, setRating] = useState(0)\n    const [comment, setComment] = useState('')\n\n    const dispatch = useDispatch()\n\n    const productDetails = useSelector(state => state.productDetails)\n    const { loading, error, product } = productDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\n    const {\n        loading: loadingProductReview,\n        error: errorProductReview,\n        success: successProductReview,\n    } = productReviewCreate\n\n    useEffect(() => {\n        if (successProductReview) {\n            setRating(0)\n            setComment('')\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\n        }\n\n        dispatch(listProductDetails(match.params.id))\n\n    }, [dispatch, match, successProductReview])\n\n    const addToCartHandler = () => {\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(createProductReview(\n            match.params.id, {\n            rating,\n            comment\n        }\n        ))\n    }\n\n    return (\n        <div>\n            <Link to='/' className='btn btn-light my-3'>Назад</Link>\n            {loading ?\n                <Loader />\n                : error\n                    ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <div>\n                            <Row>\n                                <Col md={6}>\n                                    <Image src={product.image} alt={product.name} fluid />\n                                </Col>\n\n\n                                <Col md={3}>\n                                    <ListGroup variant=\"flush\">\n                                        <ListGroup.Item>\n                                            <h3>{product.name}</h3>\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item>\n                                            <Rating value={product.rating} text={`Кол-во отзывов:${product.numReviews}`} color={'#f8e825'} />\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item>\n                                            Цена: ${product.price}\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item>\n                                            Описание: {product.description}\n                                        </ListGroup.Item>\n                                    </ListGroup>\n                                </Col>\n\n\n                                <Col md={3}>\n                                    <Card>\n                                        <ListGroup variant='flush'>\n                                            <ListGroup.Item>\n                                                <Row>\n                                                    <Col>Цена:</Col>\n                                                    <Col>\n                                                        <strong>${product.price}</strong>\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n                                            <ListGroup.Item>\n                                                <Row>\n                                                    <Col>Наличие:</Col>\n                                                    <Col>\n                                                        {product.countInStock > 0 ? 'В наличие' : 'Отсутвует'}\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n\n                                            {product.countInStock > 0 && (\n                                                <ListGroup.Item>\n                                                    <Row>\n                                                        <Col>Количество</Col>\n                                                        <Col xs='auto' className='my-1'>\n                                                            <Form.Control\n                                                                as=\"select\"\n                                                                value={qty}\n                                                                onChange={(e) => setQty(e.target.value)}\n                                                            >\n                                                                {\n\n                                                                    [...Array(product.countInStock).keys()].map((x) => (\n                                                                        <option key={x + 1} value={x + 1}>\n                                                                            {x + 1}\n                                                                        </option>\n                                                                    ))\n                                                                }\n\n                                                            </Form.Control>\n                                                        </Col>\n                                                    </Row>\n                                                </ListGroup.Item>\n                                            )}\n\n\n                                            <ListGroup.Item>\n                                                <Button\n                                                    onClick={addToCartHandler}\n                                                    className='btn-block'\n                                                    disabled={product.countInStock == 0}\n                                                    type='button'>\n                                                    Добавить в корзину\n                                                </Button>\n                                            </ListGroup.Item>\n                                        </ListGroup>\n                                    </Card>\n                                </Col>\n                            </Row>\n\n                            <Row>\n                                <Col md={6}>\n                                    <h4>Отзывы</h4>\n                                    {product.reviews.length === 0 && <Message variant='info'>Отзывов нет</Message>}\n\n                                    <ListGroup variant='flush'>\n                                        {product.reviews.map((review) => (\n                                            <ListGroup.Item key={review._id}>\n                                                <strong>{review.name}</strong>\n                                                <Rating value={review.rating} color='#f8e825' />\n                                                <p>{review.createdAt.substring(0, 10)}</p>\n                                                <p>{review.comment}</p>\n                                            </ListGroup.Item>\n                                        ))}\n\n                                        <ListGroup.Item>\n                                            <h4>Написать отзыв</h4>\n\n                                            {loadingProductReview && <Loader />}\n                                            {successProductReview && <Message variant='success'>Подтвердить</Message>}\n                                            {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\n\n                                            {userInfo ? (\n                                                <Form onSubmit={submitHandler}>\n                                                    <Form.Group controlId='rating'>\n                                                        <Form.Label>Рейтинг</Form.Label>\n                                                        <Form.Control\n                                                            as='select'\n                                                            value={rating}\n                                                            onChange={(e) => setRating(e.target.value)}\n                                                        >\n                                                            <option value=''>Выбрать...</option>\n                                                            <option value='1'>1 - Плохо</option>\n                                                            <option value='2'>2 - Неплохо</option>\n                                                            <option value='3'>3 - Хорошо</option>\n                                                            <option value='4'>4 - Отлично</option>\n                                                            <option value='5'>5 - Замечательно</option>\n                                                        </Form.Control>\n                                                    </Form.Group>\n\n                                                    <Form.Group controlId='comment'>\n                                                        <Form.Label>Отзыв</Form.Label>\n                                                        <Form.Control\n                                                            as='textarea'\n                                                            row='5'\n                                                            value={comment}\n                                                            onChange={(e) => setComment(e.target.value)}\n                                                        ></Form.Control>\n                                                    </Form.Group>\n\n                                                    <Button\n                                                        disabled={loadingProductReview}\n                                                        type='submit'\n                                                        variant='primary'\n                                                    >\n                                                        Подтвердить\n                                                    </Button>\n\n                                                </Form>\n                                            ) : (\n                                                    <Message variant='info'>Пожалуйста <Link to='/login'>зарегистрируйтесь</Link> чтобы писать отзывы</Message>\n                                                )}\n                                        </ListGroup.Item>\n                                    </ListGroup>\n                                </Col>\n                            </Row>\n                        </div>\n                    )\n\n            }\n\n\n        </div >\n    )\n}\n\nexport default ProductScreen\n","D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\screens\\HomeScreen.js",["363"],"import React, {useState, useEffect} from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {Row, Col} from 'react-bootstrap'\nimport Product from '../components/Product'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\nimport ProductCarousel from '../components/ProductCarousel'\nimport {listProducts} from '../actions/productActions'\n\n\nfunction HomeScreen({history}) {\n    const dispatch = useDispatch()\n    const productList = useSelector(state => state.productList)\n    const {error, loading, products, page, pages} = productList\n\n    let keyword = history.location.search\n\n    useEffect(() => {\n        dispatch(listProducts(keyword))\n\n    }, [dispatch, keyword])\n\n    return (\n        <div>\n            <h1>Лучшие товары месяца </h1>\n            {<ProductCarousel/>}\n\n\n    <h1>Товары </h1>\n    {\n        loading ? <Loader/>\n            : error ? <Message variant='danger'>{error}</Message>\n                :\n                <div>\n                    <Row>\n                        {products.map(product => (\n                            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                                <Product product={product}/>\n                            </Col>\n                        ))}\n                    </Row>\n                    <Paginate page={page} pages={pages} keyword={keyword}/>\n                </div>\n    }\n</div>\n)\n}\n\nexport default HomeScreen\n","D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\screens\\OrderScreen.js",["364"],"import React, { useState, useEffect } from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\n\nfunction OrderScreen({ match, history }) {\n    const orderId = match.params.id\n    const dispatch = useDispatch()\n\n\n    const [sdkReady, setSdkReady] = useState(false)\n\n    const orderDetails = useSelector(state => state.orderDetails)\n    const { order, error, loading } = orderDetails\n\n    const orderPay = useSelector(state => state.orderPay)\n    const { loading: loadingPay, success: successPay } = orderPay\n\n    const orderDeliver = useSelector(state => state.orderDeliver)\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n\n    if (!loading && !error) {\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n    }\n\n\n    const addPayPalScript = () => {\n        const script = document.createElement('script')\n        script.type = 'text/javascript'\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AeDXja18CkwFUkL-HQPySbzZsiTrN52cG13mf9Yz7KiV2vNnGfTDP0wDEN9sGlhZHrbb_USawcJzVDgn'\n        script.async = true\n        script.onload = () => {\n            setSdkReady(true)\n        }\n        document.body.appendChild(script)\n    }\n\n    useEffect(() => {\n\n        if (!userInfo) {\n            history.push('/login')\n        }\n\n        if (!order || successPay || order._id !== Number(orderId) || successDeliver) {\n            dispatch({ type: ORDER_PAY_RESET })\n            dispatch({ type: ORDER_DELIVER_RESET })\n\n            dispatch(getOrderDetails(orderId))\n        } else if (!order.isPaid) {\n            if (!window.paypal) {\n                addPayPalScript()\n            } else {\n                setSdkReady(true)\n            }\n        }\n    }, [dispatch, order, orderId, successPay, successDeliver])\n\n\n    const successPaymentHandler = (paymentResult) => {\n        dispatch(payOrder(orderId, paymentResult))\n    }\n\n    const deliverHandler = () => {\n        dispatch(deliverOrder(order))\n    }\n\n    return loading ? (\n        <Loader />\n    ) : error ? (\n        <Message variant='danger'>{error}</Message>\n    ) : (\n                <div>\n                    <h1>Заказ: {order.Id}</h1>\n                    <Row>\n                        <Col md={8}>\n                            <ListGroup variant='flush'>\n                                <ListGroup.Item>\n                                    <h2>Доставка</h2>\n                                    <p><strong>Имя: </strong> {order.user.name}</p>\n                                    <p><strong>Почта: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\n                                    <p>\n                                        <strong>Доставка: </strong>\n                                        {order.shippingAddress.address},  {order.shippingAddress.city}\n                                        {'  '}\n                                        {order.shippingAddress.postalCode},\n                                {'  '}\n                                        {order.shippingAddress.country}\n                                    </p>\n\n                                    {order.isDelivered ? (\n                                        <Message variant='success'>Доставка в {order.deliveredAt}</Message>\n                                    ) : (\n                                            <Message variant='warning'>Не доставляем</Message>\n                                        )}\n                                </ListGroup.Item>\n\n                                <ListGroup.Item>\n                                    <h2>Способы оплаты</h2>\n                                    <p>\n                                        <strong>Способ оплаты: </strong>\n                                        {order.paymentMethod}\n                                    </p>\n                                    {order.isPaid ? (\n                                        <Message variant='success'>Оплачено {order.paidAt}</Message>\n                                    ) : (\n                                            <Message variant='warning'>Не оплачено</Message>\n                                        )}\n\n                                </ListGroup.Item>\n\n                                <ListGroup.Item>\n                                    <h2>Товары заказа</h2>\n                                    {order.orderItems.length === 0 ? <Message variant='info'>\n                                        Заказ пуст\n                            </Message> : (\n                                            <ListGroup variant='flush'>\n                                                {order.orderItems.map((item, index) => (\n                                                    <ListGroup.Item key={index}>\n                                                        <Row>\n                                                            <Col md={1}>\n                                                                <Image src={item.image} alt={item.name} fluid rounded />\n                                                            </Col>\n\n                                                            <Col>\n                                                                <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                            </Col>\n\n                                                            <Col md={4}>\n                                                                {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\n                                                            </Col>\n                                                        </Row>\n                                                    </ListGroup.Item>\n                                                ))}\n                                            </ListGroup>\n                                        )}\n                                </ListGroup.Item>\n\n                            </ListGroup>\n\n                        </Col>\n\n                        <Col md={4}>\n                            <Card>\n                                <ListGroup variant='flush'>\n                                    <ListGroup.Item>\n                                        <h2>Подробности заказа</h2>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Товары:</Col>\n                                            <Col>${order.itemsPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Доставка:</Col>\n                                            <Col>${order.shippingPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Налог:</Col>\n                                            <Col>${order.taxPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Всего:</Col>\n                                            <Col>${order.totalPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n\n                                    {!order.isPaid && (\n                                        <ListGroup.Item>\n                                            {loadingPay && <Loader />}\n\n                                            {!sdkReady ? (\n                                                <Loader />\n                                            ) : (\n                                                    <PayPalButton\n                                                        amount={order.totalPrice}\n                                                        onSuccess={successPaymentHandler}\n                                                    />\n                                                )}\n                                        </ListGroup.Item>\n                                    )}\n                                </ListGroup>\n                                {loadingDeliver && <Loader />}\n                                {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\n                                    <ListGroup.Item>\n                                        <Button\n                                            type='button'\n                                            className='btn btn-block'\n                                            onClick={deliverHandler}\n                                        >\n                                            Пометить как доставлено\n                                        </Button>\n                                    </ListGroup.Item>\n                                )}\n                            </Card>\n                        </Col>\n                    </Row>\n                </div>\n            )\n}\n\nexport default OrderScreen\n","D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\screens\\CartScreen.js",[],"D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\screens\\ProfileScreen.js",["365","366"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\nimport { listMyOrders } from '../actions/orderActions'\n\nfunction ProfileScreen({ history }) {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n    const { success } = userUpdateProfile\n\n    const orderListMy = useSelector(state => state.orderListMy)\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n            if (!user || !user.name || success || userInfo._id !== user._id) {\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\n                dispatch(getUserDetails('profile'))\n                dispatch(listMyOrders())\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n            }\n        }\n    }, [dispatch, history, userInfo, user, success])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (password != confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(updateUserProfile({\n                'id': user._id,\n                'name': name,\n                'email': email,\n                'password': password\n            }))\n            setMessage('')\n        }\n\n    }\n    return (\n        <Row>\n            <Col md={3}>\n                <h2>Профиль пользователя</h2>\n\n                {message && <Message variant='danger'>{message}</Message>}\n                {error && <Message variant='danger'>{error}</Message>}\n                {loading && <Loader />}\n                <Form onSubmit={submitHandler}>\n\n                    <Form.Group controlId='name'>\n                        <Form.Label>Имя</Form.Label>\n                        <Form.Control\n                            required\n                            type='name'\n                            placeholder='Введите имя'\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='email'>\n                        <Form.Label>Email</Form.Label>\n                        <Form.Control\n                            required\n                            type='email'\n                            placeholder='Введите Email'\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='password'>\n                        <Form.Label>Пароль</Form.Label>\n                        <Form.Control\n\n                            type='password'\n                            placeholder='Введите пароль'\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='passwordConfirm'>\n                        <Form.Label>Подтвердить пароль</Form.Label>\n                        <Form.Control\n\n                            type='password'\n                            placeholder='Подтвердите пароль'\n                            value={confirmPassword}\n                            onChange={(e) => setConfirmPassword(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Button type='submit' variant='primary'>\n                        Обновить\n                </Button>\n\n                </Form>\n            </Col>\n\n            <Col md={9}>\n                <h2>Мои заказы</h2>\n                {loadingOrders ? (\n                    <Loader />\n                ) : errorOrders ? (\n                    <Message variant='danger'>{errorOrders}</Message>\n                ) : (\n                            <Table striped responsive className='table-sm'>\n                                <thead>\n                                    <tr>\n                                        <th>ID</th>\n                                        <th>Date</th>\n                                        <th>Total</th>\n                                        <th>Paid</th>\n                                        <th>Delivered</th>\n                                        <th></th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n                                    {orders.map(order => (\n                                        <tr key={order._id}>\n                                            <td>{order._id}</td>\n                                            <td>{order.createdAt.substring(0, 10)}</td>\n                                            <td>${order.totalPrice}</td>\n                                            <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\n                                                <i className='fas fa-times' style={{ color: 'red' }}></i>\n                                            )}</td>\n                                            <td>\n                                                <LinkContainer to={`/order/${order._id}`}>\n                                                    <Button className='btn-sm'>Подробнее</Button>\n                                                </LinkContainer>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table>\n                        )}\n            </Col>\n        </Row>\n    )\n}\n\nexport default ProfileScreen","D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\screens\\ShippingScreen.js",["367"],"import React, { useState, useEffect } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { saveShippingAddress } from '../actions/cartActions'\n\nfunction ShippingScreen({ history }) {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n\n    const [address, setAddress] = useState(shippingAddress.address)\n    const [city, setCity] = useState(shippingAddress.city)\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n    const [country, setCountry] = useState(shippingAddress.country)\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\n        history.push('/payment')\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 />\n            <h1>Доставка</h1>\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='address'>\n                    <Form.Label>Адрес</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Введите адрес'\n                        value={address ? address : ''}\n                        onChange={(e) => setAddress(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='city'>\n                    <Form.Label>Город</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Введите город'\n                        value={city ? city : ''}\n                        onChange={(e) => setCity(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='postalCode'>\n                    <Form.Label>Почтовый индекс</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Введите почтовый индекс'\n                        value={postalCode ? postalCode : ''}\n                        onChange={(e) => setPostalCode(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='country'>\n                    <Form.Label>Страна</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Введите страну'\n                        value={country ? country : ''}\n                        onChange={(e) => setCountry(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Продолжить\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default ShippingScreen\n","D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\screens\\LoginScreen.js",[],"D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\components\\Footer.js",[],"D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\screens\\PlaceOrderScreen.js",["368","369"],"import React, { useState, useEffect } from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { createOrder } from '../actions/orderActions'\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\n\nfunction PlaceOrderScreen({ history }) {\n\n    const orderCreate = useSelector(state => state.orderCreate)\n    const { order, error, success } = orderCreate\n\n    const dispatch = useDispatch()\n\n    const cart = useSelector(state => state.cart)\n\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\n    cart.taxPrice = Number((0.082) * cart.itemsPrice).toFixed(2)\n\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\n\n\n    if (!cart.paymentMethod) {\n        history.push('/payment')\n    }\n\n    useEffect(() => {\n        if (success) {\n            history.push(`/order/${order._id}`)\n            dispatch({ type: ORDER_CREATE_RESET })\n        }\n    }, [success, history])\n\n    const placeOrder = () => {\n        dispatch(createOrder({\n            orderItems: cart.cartItems,\n            shippingAddress: cart.shippingAddress,\n            paymentMethod: cart.paymentMethod,\n            itemsPrice: cart.itemsPrice,\n            shippingPrice: cart.shippingPrice,\n            taxPrice: cart.taxPrice,\n            totalPrice: cart.totalPrice,\n        }))\n    }\n\n    return (\n        <div>\n            <CheckoutSteps step1 step2 step3 step4 />\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Доставка</h2>\n\n                            <p>\n                                <strong>Доставка: </strong>\n                                {cart.shippingAddress.address},  {cart.shippingAddress.city}\n                                {'  '}\n                                {cart.shippingAddress.postalCode},\n                                {'  '}\n                                {cart.shippingAddress.country}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Способы оплаты</h2>\n                            <p>\n                                <strong>Способ: </strong>\n                                {cart.paymentMethod}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Товары</h2>\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\n                                Коризна пуста\n                            </Message> : (\n                                    <ListGroup variant='flush'>\n                                        {cart.cartItems.map((item, index) => (\n                                            <ListGroup.Item key={index}>\n                                                <Row>\n                                                    <Col md={1}>\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\n                                                    </Col>\n\n                                                    <Col>\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                    </Col>\n\n                                                    <Col md={4}>\n                                                        {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n                                        ))}\n                                    </ListGroup>\n                                )}\n                        </ListGroup.Item>\n\n                    </ListGroup>\n\n                </Col>\n\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h2>О заказе</h2>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Товары:</Col>\n                                    <Col>${cart.itemsPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Доставка:</Col>\n                                    <Col>${cart.shippingPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Налог:</Col>\n                                    <Col>${cart.taxPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Всего:</Col>\n                                    <Col>${cart.totalPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n\n                            <ListGroup.Item>\n                                {error && <Message variant='danger'>{error}</Message>}\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Button\n                                    type='button'\n                                    className='btn-block'\n                                    disabled={cart.cartItems === 0}\n                                    onClick={placeOrder}\n                                >\n                                    Продолжить\n                                </Button>\n                            </ListGroup.Item>\n\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default PlaceOrderScreen\n","D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\screens\\UserEditScreen.js",["370"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { getUserDetails, updateUser } from '../actions/userActions'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\n\nfunction UserEditScreen({ match, history }) {\n\n    const userId = match.params.id\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [isAdmin, setIsAdmin] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    const userUpdate = useSelector(state => state.userUpdate)\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\n\n    useEffect(() => {\n\n        if (successUpdate) {\n            dispatch({ type: USER_UPDATE_RESET })\n            history.push('/admin/userlist')\n        } else {\n\n            if (!user.name || user._id !== Number(userId)) {\n                dispatch(getUserDetails(userId))\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n                setIsAdmin(user.isAdmin)\n            }\n        }\n\n    }, [user, userId, successUpdate, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateUser({ _id: user._id, name, email, isAdmin }))\n    }\n\n    return (\n        <div>\n            <Link to='/admin/userlist'>\n                Назад\n            </Link>\n\n            <FormContainer>\n                <h1>Редактировать пользователя</h1>\n                {loadingUpdate && <Loader />}\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <Form onSubmit={submitHandler}>\n\n                            <Form.Group controlId='name'>\n                                <Form.Label>Имя</Form.Label>\n                                <Form.Control\n\n                                    type='name'\n                                    placeholder='Введите имя'\n                                    value={name}\n                                    onChange={(e) => setName(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='email'>\n                                <Form.Label>Почта</Form.Label>\n                                <Form.Control\n                                    type='email'\n                                    placeholder='Введите почту'\n                                    value={email}\n                                    onChange={(e) => setEmail(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='isadmin'>\n                                <Form.Check\n                                    type='checkbox'\n                                    label='Админ'\n                                    checked={isAdmin}\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\n                                >\n                                </Form.Check>\n                            </Form.Group>\n\n                            <Button type='submit' variant='primary'>\n                                Обновить\n                        </Button>\n\n                        </Form>\n                    )}\n\n            </FormContainer >\n        </div>\n\n    )\n}\n\nexport default UserEditScreen","D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\screens\\RegisterScreen.js",["371"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { register } from '../actions/userActions'\n\nfunction RegisterScreen({ location, history }) {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    const userRegister = useSelector(state => state.userRegister)\n    const { error, loading, userInfo } = userRegister\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (password != confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(register(name, email, password))\n        }\n\n    }\n\n    return (\n        <FormContainer>\n            <h1>Регистрация</h1>\n            {message && <Message variant='danger'>{message}</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='name'>\n                    <Form.Label>Имя</Form.Label>\n                    <Form.Control\n                        required\n                        type='name'\n                        placeholder='Введите имя'\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='email'>\n                    <Form.Label>Введите адрес</Form.Label>\n                    <Form.Control\n                        required\n                        type='email'\n                        placeholder='Введите почту'\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='password'>\n                    <Form.Label>Пароль</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Введите пароль'\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='passwordConfirm'>\n                    <Form.Label>Подтверждение пароля</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Подтвердите пароль'\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Зарегистрироваться\n                </Button>\n\n            </Form>\n\n            <Row className='py-3'>\n                <Col>\n                    Уже есть аккаунт? <Link\n                        to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n                        Войти\n                        </Link>\n                </Col>\n            </Row>\n        </FormContainer >\n    )\n}\n\nexport default RegisterScreen\n","D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\screens\\ProductEditScreen.js",[],"D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\screens\\OrderListScreen.js",["372"],"import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listOrders } from '../actions/orderActions'\n\nfunction OrderListScreen({ history }) {\n\n    const dispatch = useDispatch()\n\n    const orderList = useSelector(state => state.orderList)\n    const { loading, error, orders } = orderList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listOrders())\n        } else {\n            history.push('/login')\n        }\n\n    }, [dispatch, history, userInfo])\n\n\n    return (\n        <div>\n            <h1>Заказы</h1>\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <Table striped bordered hover responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>Пользователь</th>\n                                    <th>Дата</th>\n                                    <th>Кол-во</th>\n                                    <th>Оплата</th>\n                                    <th>Доставка</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {orders.map(order => (\n                                    <tr key={order._id}>\n                                        <td>{order._id}</td>\n                                        <td>{order.user && order.user.name}</td>\n                                        <td>{order.createdAt.substring(0, 10)}</td>\n                                        <td>${order.totalPrice}</td>\n\n                                        <td>{order.isPaid ? (\n                                            order.paidAt.substring(0, 10)\n                                        ) : (\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\n                                            )}\n                                        </td>\n\n                                        <td>{order.isDelivered ? (\n                                            order.deliveredAt.substring(0, 10)\n                                        ) : (\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\n                                            )}\n                                        </td>\n\n                                        <td>\n                                            <LinkContainer to={`/order/${order._id}`}>\n                                                <Button variant='light' className='btn-sm'>\n                                                    Подробнее\n                                                </Button>\n                                            </LinkContainer>\n\n\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    )}\n        </div>\n    )\n}\n\nexport default OrderListScreen","D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\screens\\UserListScreen.js",["373"],"import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listUsers, deleteUser } from '../actions/userActions'\n\nfunction UserListScreen({ history }) {\n\n    const dispatch = useDispatch()\n\n    const userList = useSelector(state => state.userList)\n    const { loading, error, users } = userList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userDelete = useSelector(state => state.userDelete)\n    const { success: successDelete } = userDelete\n\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listUsers())\n        } else {\n            history.push('/login')\n        }\n\n    }, [dispatch, history, successDelete, userInfo])\n\n\n    const deleteHandler = (id) => {\n\n        if (window.confirm('Are you sure you want to delete this user?')) {\n            dispatch(deleteUser(id))\n        }\n    }\n\n    return (\n        <div>\n            <h1>Пользователи</h1>\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <Table striped bordered hover responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>Имя</th>\n                                    <th>Почта</th>\n                                    <th>Админ</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {users.map(user => (\n                                    <tr key={user._id}>\n                                        <td>{user._id}</td>\n                                        <td>{user.name}</td>\n                                        <td>{user.email}</td>\n                                        <td>{user.isAdmin ? (\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\n                                        ) : (\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\n                                            )}</td>\n\n                                        <td>\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                                                <Button variant='light' className='btn-sm'>\n                                                    <i className='fas fa-edit'></i>\n                                                </Button>\n                                            </LinkContainer>\n\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\n                                                <i className='fas fa-trash'></i>\n                                            </Button>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    )}\n        </div>\n    )\n}\n\nexport default UserListScreen\n","D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\screens\\ProductListScreen.js",["374"],"import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\n\nfunction ProductListScreen({ history, match }) {\n\n    const dispatch = useDispatch()\n\n    const productList = useSelector(state => state.productList)\n    const { loading, error, products, pages, page } = productList\n\n    const productDelete = useSelector(state => state.productDelete)\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\n\n    const productCreate = useSelector(state => state.productCreate)\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\n\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    let keyword = history.location.search\n    useEffect(() => {\n        dispatch({ type: PRODUCT_CREATE_RESET })\n\n        if (!userInfo.isAdmin) {\n            history.push('/login')\n        }\n\n        if (successCreate) {\n            history.push(`/admin/product/${createdProduct._id}/edit`)\n        } else {\n            dispatch(listProducts(keyword))\n        }\n\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\n\n\n    const deleteHandler = (id) => {\n\n        if (window.confirm('Вы точно хотите удалить товар?')) {\n            dispatch(deleteProduct(id))\n        }\n    }\n\n    const createProductHandler = () => {\n        dispatch(createProduct())\n    }\n\n    return (\n        <div>\n            <Row className='align-items-center'>\n                <Col>\n                    <h1>Товары</h1>\n                </Col>\n\n                <Col className='text-right'>\n                    <Button className='my-3' onClick={createProductHandler}>\n                        <i className='fas fa-plus'></i> Добавить товар\n                    </Button>\n                </Col>\n            </Row>\n\n            {loadingDelete && <Loader />}\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n\n\n            {loadingCreate && <Loader />}\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <div>\n                            <Table striped bordered hover responsive className='table-sm'>\n                                <thead>\n                                    <tr>\n                                        <th>ID</th>\n                                        <th>Название</th>\n                                        <th>Цена</th>\n                                        <th>Категория</th>\n                                        <th>Производитель</th>\n                                        <th></th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n                                    {products.map(product => (\n                                        <tr key={product._id}>\n                                            <td>{product._id}</td>\n                                            <td>{product.name}</td>\n                                            <td>${product.price}</td>\n                                            <td>{product.category}</td>\n                                            <td>{product.brand}</td>\n\n                                            <td>\n                                                <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                                                    <Button variant='light' className='btn-sm'>\n                                                        <i className='fas fa-edit'></i>\n                                                    </Button>\n                                                </LinkContainer>\n\n                                                <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\n                                                    <i className='fas fa-trash'></i>\n                                                </Button>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table>\n                            <Paginate pages={pages} page={page} isAdmin={true} />\n                        </div>\n                    )}\n        </div>\n    )\n}\n\nexport default ProductListScreen","D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\components\\SearchBox.js",[],"D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\components\\CheckoutSteps.js",[],"D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\components\\FormContainer.js",[],"D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\components\\Message.js",[],"D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\components\\Rating.js",[],"D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\components\\Product.js",[],"D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\components\\Paginate.js",[],"D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\components\\Loader.js",[],"D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\components\\ProductCarousel.js",[],"D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\constants\\orderConstants.js",[],"D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\actions\\userActions.js",["375"],"import axios from 'axios'\nimport {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n\n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_RESET,\n\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_RESET,\n\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n\n} from '../constants/userConstants'\n\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/login/',\n            { 'username': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    dispatch({ type: USER_LOGOUT })\n    dispatch({ type: USER_DETAILS_RESET })\n    dispatch({ type: ORDER_LIST_MY_RESET })\n    dispatch({ type: USER_LIST_RESET })\n}\n\n\nexport const register = (name, email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/register/',\n            { 'name': name, 'email': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/users/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_PROFILE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/users/profile/update/`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_PROFILE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listUsers = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/users/`,\n            config\n        )\n\n        dispatch({\n            type: USER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `/api/users/delete/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: USER_DELETE_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/users/update/${user._id}/`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_SUCCESS,\n        })\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\constants\\productConstants.js",[],"D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\constants\\cartConstants.js",[],"D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\actions\\cartActions.js",[],"D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\constants\\userConstants.js",[],"D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\actions\\productActions.js",["376"],"import axios from 'axios'\nimport {\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n\n    PRODUCT_CREATE_REVIEW_REQUEST,\n    PRODUCT_CREATE_REVIEW_SUCCESS,\n    PRODUCT_CREATE_REVIEW_FAIL,\n\n\n    PRODUCT_TOP_REQUEST,\n    PRODUCT_TOP_SUCCESS,\n    PRODUCT_TOP_FAIL,\n\n} from '../constants/productConstants'\n\n\nexport const listProducts = (keyword = '') => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_LIST_REQUEST })\n\n        const { data } = await axios.get(`/api/products${keyword}`)\n\n        dispatch({\n            type: PRODUCT_LIST_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const listTopProducts = () => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_TOP_REQUEST })\n\n        const { data } = await axios.get(`/api/products/top/`)\n\n        dispatch({\n            type: PRODUCT_TOP_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_TOP_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listProductDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n        const { data } = await axios.get(`/api/products/${id}`)\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `/api/products/delete/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: PRODUCT_DELETE_SUCCESS,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\n\nexport const createProduct = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/products/create/`,\n            {},\n            config\n        )\n        dispatch({\n            type: PRODUCT_CREATE_SUCCESS,\n            payload: data,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/products/update/${product._id}/`,\n            product,\n            config\n        )\n        dispatch({\n            type: PRODUCT_UPDATE_SUCCESS,\n            payload: data,\n        })\n\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/products/${productId}/reviews/`,\n            review,\n            config\n        )\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\n            payload: data,\n        })\n\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","D:\\ВУЗ\\wood_shop\\wood_shop\\frontend\\src\\actions\\orderActions.js",["377","378","379"],"import axios from 'axios'\nimport {\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_RESET,\n\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_MY_RESET,\n\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAIL,\n\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DELIVER_FAIL,\n    ORDER_DELIVER_RESET,\n} from '../constants/orderConstants'\n\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\n\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/orders/add/`,\n            order,\n            config\n        )\n\n        dispatch({\n            type: ORDER_CREATE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: CART_CLEAR_ITEMS,\n            payload: data\n        })\n\n        localStorage.removeItem('cartItems')\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_PAY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/orders/${id}/pay/`,\n            paymentResult,\n            config\n        )\n\n        dispatch({\n            type: ORDER_PAY_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_PAY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DELIVER_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/orders/${order._id}/deliver/`,\n            {},\n            config\n        )\n\n        dispatch({\n            type: ORDER_DELIVER_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DELIVER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_MY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/myorders/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_MY_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_MY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\index.js",[],["380","381"],"D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\store.js",[],"D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\App.js",[],"D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\reportWebVitals.js",[],"D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\reducers\\userReducers.js",[],"D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\reducers\\cartReducers.js",[],"D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\reducers\\productReducers.js",[],"D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\reducers\\orderReducers.js",[],"D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\components\\Header.js",["382"],"D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\screens\\ProductScreen.js",["383"],"D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\screens\\HomeScreen.js",["384"],"D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\components\\Footer.js",[],"D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\screens\\CartScreen.js",[],"D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\screens\\ShippingScreen.js",["385"],"D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\screens\\LoginScreen.js",[],"D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\screens\\RegisterScreen.js",["386"],"D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\screens\\ProfileScreen.js",["387","388"],"D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\screens\\UserListScreen.js",["389"],"D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\screens\\ProductListScreen.js",["390"],"D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\screens\\PaymentScreen.js",["391"],"D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\screens\\PlaceOrderScreen.js",["392","393"],"D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\screens\\OrderListScreen.js",["394"],"D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\screens\\OrderScreen.js",["395"],"D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\screens\\ProductEditScreen.js",[],"D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\screens\\UserEditScreen.js",["396"],"D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\constants\\orderConstants.js",[],"D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\constants\\cartConstants.js",[],"D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\constants\\productConstants.js",[],"D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\constants\\userConstants.js",[],"D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\components\\Message.js",[],"D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\components\\Product.js",[],"D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\components\\Loader.js",[],"D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\components\\SearchBox.js",[],"D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\components\\Paginate.js",[],"D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\components\\ProductCarousel.js",[],"D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\components\\CheckoutSteps.js",[],"D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\components\\FormContainer.js",[],"D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\components\\Rating.js",[],"D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\actions\\cartActions.js",[],"D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\actions\\orderActions.js",["397","398","399"],["400","401"],"D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\actions\\productActions.js",["402"],"D:\\ВУЗ\\wood_shop\\wood_Shop\\frontend\\src\\actions\\userActions.js",["403"],{"ruleId":"404","replacedBy":"405"},{"ruleId":"406","replacedBy":"407"},{"ruleId":"408","severity":1,"message":"409","line":3,"column":34,"nodeType":"410","messageId":"411","endLine":3,"endColumn":37},{"ruleId":"408","severity":1,"message":"412","line":1,"column":27,"nodeType":"410","messageId":"411","endLine":1,"endColumn":36},{"ruleId":"413","severity":1,"message":"414","line":142,"column":84,"nodeType":"415","messageId":"416","endLine":142,"endColumn":86},{"ruleId":"408","severity":1,"message":"417","line":1,"column":16,"nodeType":"410","messageId":"411","endLine":1,"endColumn":24},{"ruleId":"418","severity":1,"message":"419","line":65,"column":8,"nodeType":"420","endLine":65,"endColumn":62,"suggestions":"421"},{"ruleId":"408","severity":1,"message":"422","line":2,"column":10,"nodeType":"410","messageId":"411","endLine":2,"endColumn":14},{"ruleId":"413","severity":1,"message":"423","line":53,"column":22,"nodeType":"415","messageId":"416","endLine":53,"endColumn":24},{"ruleId":"408","severity":1,"message":"412","line":1,"column":27,"nodeType":"410","messageId":"411","endLine":1,"endColumn":36},{"ruleId":"408","severity":1,"message":"417","line":1,"column":17,"nodeType":"410","messageId":"411","endLine":1,"endColumn":25},{"ruleId":"418","severity":1,"message":"424","line":35,"column":8,"nodeType":"420","endLine":35,"endColumn":26,"suggestions":"425"},{"ruleId":"418","severity":1,"message":"426","line":43,"column":8,"nodeType":"420","endLine":43,"endColumn":46,"suggestions":"427"},{"ruleId":"413","severity":1,"message":"423","line":34,"column":22,"nodeType":"415","messageId":"416","endLine":34,"endColumn":24},{"ruleId":"408","severity":1,"message":"417","line":1,"column":17,"nodeType":"410","messageId":"411","endLine":1,"endColumn":25},{"ruleId":"408","severity":1,"message":"417","line":1,"column":17,"nodeType":"410","messageId":"411","endLine":1,"endColumn":25},{"ruleId":"408","severity":1,"message":"417","line":1,"column":17,"nodeType":"410","messageId":"411","endLine":1,"endColumn":25},{"ruleId":"408","severity":1,"message":"428","line":21,"column":5,"nodeType":"410","messageId":"411","endLine":21,"endColumn":30},{"ruleId":"408","severity":1,"message":"429","line":117,"column":17,"nodeType":"410","messageId":"411","endLine":117,"endColumn":21},{"ruleId":"408","severity":1,"message":"430","line":14,"column":5,"nodeType":"410","messageId":"411","endLine":14,"endColumn":20},{"ruleId":"408","severity":1,"message":"431","line":19,"column":5,"nodeType":"410","messageId":"411","endLine":19,"endColumn":24},{"ruleId":"408","severity":1,"message":"432","line":28,"column":5,"nodeType":"410","messageId":"411","endLine":28,"endColumn":24},{"ruleId":"404","replacedBy":"433"},{"ruleId":"406","replacedBy":"434"},{"ruleId":"408","severity":1,"message":"409","line":3,"column":34,"nodeType":"410","messageId":"411","endLine":3,"endColumn":37},{"ruleId":"413","severity":1,"message":"414","line":142,"column":84,"nodeType":"415","messageId":"416","endLine":142,"endColumn":86},{"ruleId":"408","severity":1,"message":"417","line":1,"column":16,"nodeType":"410","messageId":"411","endLine":1,"endColumn":24},{"ruleId":"408","severity":1,"message":"412","line":1,"column":27,"nodeType":"410","messageId":"411","endLine":1,"endColumn":36},{"ruleId":"413","severity":1,"message":"423","line":34,"column":22,"nodeType":"415","messageId":"416","endLine":34,"endColumn":24},{"ruleId":"408","severity":1,"message":"422","line":2,"column":10,"nodeType":"410","messageId":"411","endLine":2,"endColumn":14},{"ruleId":"413","severity":1,"message":"423","line":53,"column":22,"nodeType":"415","messageId":"416","endLine":53,"endColumn":24},{"ruleId":"408","severity":1,"message":"417","line":1,"column":17,"nodeType":"410","messageId":"411","endLine":1,"endColumn":25},{"ruleId":"408","severity":1,"message":"417","line":1,"column":17,"nodeType":"410","messageId":"411","endLine":1,"endColumn":25},{"ruleId":"408","severity":1,"message":"412","line":1,"column":27,"nodeType":"410","messageId":"411","endLine":1,"endColumn":36},{"ruleId":"408","severity":1,"message":"417","line":1,"column":17,"nodeType":"410","messageId":"411","endLine":1,"endColumn":25},{"ruleId":"418","severity":1,"message":"424","line":35,"column":8,"nodeType":"420","endLine":35,"endColumn":26,"suggestions":"435"},{"ruleId":"408","severity":1,"message":"417","line":1,"column":17,"nodeType":"410","messageId":"411","endLine":1,"endColumn":25},{"ruleId":"418","severity":1,"message":"419","line":65,"column":8,"nodeType":"420","endLine":65,"endColumn":62,"suggestions":"436"},{"ruleId":"418","severity":1,"message":"426","line":43,"column":8,"nodeType":"420","endLine":43,"endColumn":46,"suggestions":"437"},{"ruleId":"408","severity":1,"message":"430","line":14,"column":5,"nodeType":"410","messageId":"411","endLine":14,"endColumn":20},{"ruleId":"408","severity":1,"message":"431","line":19,"column":5,"nodeType":"410","messageId":"411","endLine":19,"endColumn":24},{"ruleId":"408","severity":1,"message":"432","line":28,"column":5,"nodeType":"410","messageId":"411","endLine":28,"endColumn":24},{"ruleId":"404","replacedBy":"438"},{"ruleId":"406","replacedBy":"439"},{"ruleId":"408","severity":1,"message":"429","line":117,"column":17,"nodeType":"410","messageId":"411","endLine":117,"endColumn":21},{"ruleId":"408","severity":1,"message":"428","line":21,"column":5,"nodeType":"410","messageId":"411","endLine":21,"endColumn":30},"no-native-reassign",["440"],"no-negated-in-lhs",["441"],"no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.","ArrayExpression",["442"],"'Link' is defined but never used.","Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'dispatch' and 'order._id'. Either include them or remove the dependency array.",["443"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["444"],"'USER_UPDATE_PROFILE_RESET' is defined but never used.","'data' is assigned a value but never used.","'ORDER_PAY_RESET' is defined but never used.","'ORDER_LIST_MY_RESET' is defined but never used.","'ORDER_DELIVER_RESET' is defined but never used.",["440"],["441"],["445"],["446"],["447"],["440"],["441"],"no-global-assign","no-unsafe-negation",{"desc":"448","fix":"449"},{"desc":"450","fix":"451"},{"desc":"452","fix":"453"},{"desc":"450","fix":"454"},{"desc":"448","fix":"455"},{"desc":"452","fix":"456"},"Update the dependencies array to be: [dispatch, order, orderId, successPay, successDeliver, userInfo, history]",{"range":"457","text":"458"},"Update the dependencies array to be: [success, history, order._id, dispatch]",{"range":"459","text":"460"},"Update the dependencies array to be: [user, userId, successUpdate, history, dispatch]",{"range":"461","text":"462"},{"range":"463","text":"460"},{"range":"464","text":"458"},{"range":"465","text":"462"},[2272,2326],"[dispatch, order, orderId, successPay, successDeliver, userInfo, history]",[1268,1286],"[success, history, order._id, dispatch]",[1432,1470],"[user, userId, successUpdate, history, dispatch]",[1268,1286],[2272,2326],[1432,1470]]